name: Build and Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  REGISTRY_USER: ${{ github.actor }}
  REGISTRY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ env.REGISTRY_USER }}
        password: ${{ env.REGISTRY_PASSWORD }}

    - name: Build and push gateway service
      run: |
        cd gateway
        chmod +x ./gradlew
        ./gradlew bootJar
        docker build -t ${{ env.REGISTRY }}/${{ github.repository }}/gateway-service:${{ github.sha }} .
        docker push ${{ env.REGISTRY }}/${{ github.repository }}/gateway-service:${{ github.sha }}
        docker tag ${{ env.REGISTRY }}/${{ github.repository }}/gateway-service:${{ github.sha }} ${{ env.REGISTRY }}/${{ github.repository }}/gateway-service:latest
        docker push ${{ env.REGISTRY }}/${{ github.repository }}/gateway-service:latest

    - name: Build and push auth service
      run: |
        cd auth
        chmod +x ./gradlew
        ./gradlew bootJar
        docker build -t ${{ env.REGISTRY }}/${{ github.repository }}/auth-service:${{ github.sha }} .
        docker push ${{ env.REGISTRY }}/${{ github.repository }}/auth-service:${{ github.sha }}
        docker tag ${{ env.REGISTRY }}/${{ github.repository }}/auth-service:${{ github.sha }} ${{ env.REGISTRY }}/${{ github.repository }}/auth-service:latest
        docker push ${{ env.REGISTRY }}/${{ github.repository }}/auth-service:latest

    - name: Build and push bucket service
      run: |
        cd bucket
        chmod +x ./gradlew
        ./gradlew bootJar
        docker build -t ${{ env.REGISTRY }}/${{ github.repository }}/bucket-service:${{ github.sha }} .
        docker push ${{ env.REGISTRY }}/${{ github.repository }}/bucket-service:${{ github.sha }}
        docker tag ${{ env.REGISTRY }}/${{ github.repository }}/bucket-service:${{ github.sha }} ${{ env.REGISTRY }}/${{ github.repository }}/bucket-service:latest
        docker push ${{ env.REGISTRY }}/${{ github.repository }}/bucket-service:latest

    - name: Build and push movie service
      run: |
        cd movie
        chmod +x ./gradlew
        ./gradlew bootJar
        docker build -t ${{ env.REGISTRY }}/${{ github.repository }}/movie-service:${{ github.sha }} .
        docker push ${{ env.REGISTRY }}/${{ github.repository }}/movie-service:${{ github.sha }}
        docker tag ${{ env.REGISTRY }}/${{ github.repository }}/movie-service:${{ github.sha }} ${{ env.REGISTRY }}/${{ github.repository }}/movie-service:latest
        docker push ${{ env.REGISTRY }}/${{ github.repository }}/movie-service:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    
    steps:
    - name: Deploy to production server
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.PROD_HOST }}
        username: ${{ secrets.PROD_USER }}
        key: ${{ secrets.PROD_SSH_KEY }}
        script: |
          cd /home/tough/application
          git pull origin main
          docker-compose -f docker-compose.prod.yml --env-file .env.prod pull
          docker-compose -f docker-compose.prod.yml --env-file .env.prod up -d --force-recreate
          docker system prune -f